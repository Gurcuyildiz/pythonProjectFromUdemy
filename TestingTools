

Testing tools
There are dozens of good testing libraries out there.
 Most are third-party packages that require an install, such as:

pylint
pyflakes
pep8
These are simple tools that merely look at your code, and they'll tell you if there are style issues or
simple problems like variable names being called before assignment.

A far better way to test your code is to write tests that send sample data to your program,
and compare what's returned to a desired outcome.
Two such tools are available from the standard library:

unittest
doctest
Let's look at pylint first, then we'll do some heavier lifting with unittest.

pylint
pylint tests for style as well as some very basic program logic.

First, if you don't have it already (and you probably do, as it's part of the Anaconda distribution),
you should install pylint.
Once that's done feel free to comment out the cell, you won't need it anymore.
! pip install pylint






